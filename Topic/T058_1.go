package main

import "fmt"

/*
给定一个仅包含大小写字母和空格 ' ' 的字符串，返回其最后一个单词的长度。

如果不存在最后一个单词，请返回 0 。

说明：一个单词是指由字母组成，但不包含任何空格的字符串。

示例:

输入: "Hello World"
输出: 5

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/length-of-last-word
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/

/*
第一解题思路，直接遍历，然后每变量一个字母计数器+1，当遇到空格时，清零，之后重新计算
遇到的第一个小问题，遍历字符串的结果是int32位的ASCII码，所以打印了一次空格的ASCII码是多少

第二个小问题，是出现在写完测试，发现当出现“a ”这种情况，即最后是由空格结尾时，出现计算为零
因为第一次写法没考虑到结尾为空格，所以直接清空计数器的话，无法计算结尾为空格时，最后一个单词的长度。
所以，我添加了一个计数器，用来进行判断，逻辑为
首先判断当前遍历内容是否为空格，若为空格
清零伴随计数器，跳过当前循环，下次循环
1.空格后存在内容，则根据判断伴随计数器是否为零判断前一个字符是否为空格， 若为空格，则将计数器重置为1，继续计算
2.若空格后不存在内容，则会计数器为空格前一个单词的长度。

*/
func lengthOfLastWord(s string) int {
	Len1 := 0
	Len := 0
	for _, v := range s {

		if v == 32 {
			Len = 0
			continue
		}
		Len1++
		if Len == 0 {
			Len1 = 1
		}
		Len = Len1
	}
	return Len1
}

func main() {
	str := "Hello "

	fmt.Println(lengthOfLastWord(str))
}
